class e extends Error{constructor(t){super(null!=t?`Timed out after waiting for ${t} ms`:"Timed out"),Object.setPrototypeOf(this,e.prototype)}}const t=(e,t)=>new Promise(((o,n)=>{try{e.schedule(o,t)}catch(e){n(e)}})),o={schedule:(e,t)=>{let o;const n=e=>{null!=e&&clearTimeout(e),o=void 0};return o=setTimeout((()=>{n(o),e()}),t),{cancel:()=>n(o)}}},n=50,r=5e3,c=Number.POSITIVE_INFINITY,l=(n,r,l)=>{var s,u;const i=null!==(s="number"==typeof r?r:null==r?void 0:r.timeout)&&void 0!==s?s:5e3,a=null!==(u="number"==typeof r?l:null==r?void 0:r.intervalBetweenAttempts)&&void 0!==u?u:50;let m=!1;const d=()=>new Promise(((e,r)=>{const c=()=>{m||new Promise(((e,t)=>{try{e(n())}catch(e){t(e)}})).then((n=>{n?e(n):t(o,a).then(c).catch(r)})).catch(r)};c()})),h=i!==c?()=>t(o,i).then((()=>{throw m=!0,new e(i)})):void 0;return null!=h?Promise.race([d(),h()]):d()};export{n as DEFAULT_INTERVAL_BETWEEN_ATTEMPTS_IN_MS,r as DEFAULT_TIMEOUT_IN_MS,e as TimeoutError,c as WAIT_FOREVER,l as default,l as waitUntil};//# sourceMappingURL=index.esm.js.map